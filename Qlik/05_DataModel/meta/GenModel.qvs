// ----------------------------------------------------------------------------------------------------------------
/*
    Author      : Zidmann (emmanuel.zidel@gmail.com)
    Script      : GenModel.qvs
    Version     : 0.1.0
    Description : Script to create the main model used in the different Qlik dashboards
 */
// ----------------------------------------------------------------------------------------------------------------
// Including the variables and the functions available in the Qlik custom library
$(Must_Include='..\02_Ressources\params.qvs');
$(Must_Include='$(vQliklibPath)\core.qvs');

SET vScriptName='GenModel';

// ----------------------------------------------------------------------------------------------------------------
//
call console_info('Loading of the script $(vScriptName)');
call console_jumpline;
call console_info('Loading the analyze reports');
call file_table_read(vFileAnalyzerQvdFilePath, 'analyzeReport');
call console_jumpline;

call console_info('Loading the mapping between a source and its associated label');
call file_table_read(vSourceLabelMappingQvdFilePath, 'mappingSourceLabel');
call console_jumpline;

call console_info('Define the final mapping between the source filepath and the label');
sourceRegister:
LOAD DISTINCT SOURCE,
              $(file_basename(SOURCE)) as TMP_SOURCE_FILENAME
RESIDENT analyzeReport
;

tmp_mappingSourceLabel:
LOAD FILENAME as TMP_SOURCE_FILENAME,
     MINSTRING(LABEL) as TMP_LABEL_CONTENT,
     COUNT(DISTINCT LABEL) as TMP_LABEL_DUPLICATES
RESIDENT mappingSourceLabel
GROUP BY FILENAME
;
call table_drop('mappingSourceLabel');

// Select the label when there is no confusion
LEFT JOIN(sourceRegister)
LOAD TMP_SOURCE_FILENAME,
     TMP_LABEL_CONTENT as TMP_LABEL
RESIDENT tmp_mappingSourceLabel
WHERE TMP_LABEL_DUPLICATES=1
;
call table_drop('tmp_mappingSourceLabel');
call column_drop('sourceRegister', 'TMP_SOURCE_FILENAME');

// Use the source path if the label is not defined
LEFT JOIN(sourceRegister)
LOAD SOURCE,
     IF(TMP_LABEL='', SOURCE, TMP_LABEL) as SOURCE_LABEL
RESIDENT sourceRegister
;
call column_drop('sourceRegister', 'TMP_LABEL');
call console_jumpline;

LEFT JOIN(analyzeReport)
LOAD SOURCE,
     SOURCE_LABEL
RESIDENT sourceRegister
;
call column_drop('analyzeReport', 'SOURCE');

call console_info('Add the new columns in the reports');
tmp_analyzeReport:
NoConcatenate
LOAD rowno() as ID_FILE,
     SOURCE_LABEL,
     FILEPATH,
     MD5SUM,
     STATUSCODE,
     INODE,
     OWNERID,
     OWNER,
     GROUPID,
     GROUP,
     LASTACCESS,
     LASTMODIFICATION,
     LASTSTATUSCHANGE,
     NBBLOCKS,
     $(number_order(NBBLOCKS)) as NBBLOCKS_ORDER,
     NBLINES,
     $(number_order(NBLINES)) as NBLINES_ORDER,
     SIZE,
     $(filesize_readable(SIZE)) as SIZE_READABLE,
     LEFT(PERMISSION, 1) as TMP_TYPE,
     $(file_dirname_unix(FILEPATH)) as TMP_DIRNAME,
     $(file_basename_unix(FILEPATH)) as TMP_BASENAME,
     $(file_extension_unix(FILEPATH)) as TMP_EXTENSION
RESIDENT analyzeReport
ORDER BY SOURCE_LABEL, FILEPATH, STATUSCODE
;
call table_drop('analyzeReport');
call table_rename('tmp_analyzeReport', 'analyzeReport');

tmp_analyzeReport:
LOAD ID_FILE,
     IF(TMP_TYPE='-', 'FILE', IF(TMP_TYPE='d', 'DIR', IF(TMP_TYPE='l', 'LINK', 'OTHER'))) as OBJECT_TYPE,
	 FILEPATH as TMP_FILEPATH,
     TMP_DIRNAME,
     TMP_BASENAME,
     TMP_EXTENSION
RESIDENT analyzeReport
;
call column_drop('analyzeReport', 'TMP_TYPE');
call column_drop('analyzeReport', 'TMP_DIRNAME');
call column_drop('analyzeReport', 'TMP_BASENAME');
call column_drop('analyzeReport', 'TMP_EXTENSION');

tmp2_analyzeReport:
LOAD ID_FILE,
     OBJECT_TYPE,
     IF(OBJECT_TYPE<>'DIR', TMP_DIRNAME, '')            as DIRNAME,
     IF(OBJECT_TYPE<>'DIR', TMP_BASENAME, TMP_FILEPATH) as BASENAME,
     IF(OBJECT_TYPE<>'DIR', TMP_EXTENSION, '')          as EXTENSION
RESIDENT tmp_analyzeReport
;
call table_drop('tmp_analyzeReport');

LEFT JOIN(analyzeReport)
LOAD ID_FILE,
     OBJECT_TYPE,
     DIRNAME,
     BASENAME,
     EXTENSION
RESIDENT tmp2_analyzeReport
;
call table_drop('tmp2_analyzeReport');

call console_info('Identify the files present several times in the same report');
fileDuplicate:
LOAD SOURCE_LABEL,
     FILEPATH,
     IF(COUNT(1)=1, 'NO', 'YES') as DUPLICATED
RESIDENT analyzeReport
GROUP BY SOURCE_LABEL, FILEPATH
;

call console_info('End of the script $(vScriptName)');
call console_delimitation;
